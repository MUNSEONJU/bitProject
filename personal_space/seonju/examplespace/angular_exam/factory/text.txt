<h4>서비스란</h4>
<br>
<p>처음 AngularJS를 시작하면 가장 먼저 부딛히는 난관이 용어에 관한 부분입니다. 아마 대부분 서비스도 이에 해당할 것입니다.
하지만 이미 기본 AngularJS 예제를 접해 본 사람은 다들 서비스를 사용 해 보았습니다. 준비된 예제 중 service 예제를 참조하십시오.</p>
<br>
<p>예제에서 이미 서비스가 사용 되고 있습니다. AngularJS에서 제공하는 서비스 중의 하나인 $scope 서비스입니다. $scope서비스를 사용하기 위해 컨트롤러에 $scope 서비스를 인자로서 주입시켜 사용하였습니다..
이 외에도 내장된 서비스들이 많이 있고, 사용하려는 서비스를 주입하여 사용합니다. 이로인하여 알 수 있는 서비스의 특징들은 다음과 같습니다.</p>
<br>
<p>- 의존성 주입(DI: Defendency Injection) 대상 
&ensp: 각기 관련 없는 로직을 의존성 관계를 맺도록 주입함으로서 느슨한 관계를 갖게 된다. 의존성 주입의 장점은 이미 충분히 검증 된 부분이다. </p>
<p>- 공통 로직 
&ensp: 웹 어플리케이션 곳곳에서 공통으로 사용 되는 기능을 따로 만들어 컴포넌트화 한다. 사용자가 임의로 만들 수 있으며, 이미 필수적인 기능들은 AngularJS에서 제공한다.</p>
<p>- 싱글톤(Singleton) 
&ensp: 곳곳에서 사용하는 서비스들은 매번 객체를 생성하지 않으며 반드시 하나의 객체만으로 운용된다. 때문에 주로 웹 어플리케이션 실행 중 공용 자원을 운용한다.</p>
<br>
<p><<참조>>
<p>1) 서비스 이름 앞의 $는 단순히 이름에 불과한다.</p>
<p>2) $scope 서비스는 쉽게 말하면 MVC(Model View Controller)에서 모델에 해당한다고 할 수 있습니다.
뷰(View)에 해당하는 DOM, 그리고 뷰를 제어하는 컨트롤러(Controller)사이의 데이터들을 담으며 $rootScope라는 최상위 scope 아래 계층구조를 갖습니다.</p>




<h4>서비스 직접 만들고 사용하기.</h4>

<p>AngularJS에서는 총 다섯가지의 서비스를 만들기 위한 메서드(constant, value, factory, service, provider)를 제공합니다</p>
<br>
<p>본래 AngularJS에서는 서비스를 인식할 때 $provide서비스의 provider 메서드 만을 인식합니다.</p>
<p>value, factory, service는 모두 provider 메서드를 감싸고 있는 메서드입니다.</p>
<br>
<p>각 메서드의 간단한 설명입니다.</p>
<p>- constant, value
&ensp: 정의하는 방법이 동일하며 값을 정의한다. 하지만 value를 사용할 때에는 provider를 통하여 만들어진 서비스가 주입되게 되는데, constant는 실제로 상수를 주입하게 됩니다.</p>
<p>- factory 
&ensp: value와 비슷하지만 값이 아닌 객체를 리턴하는 함수를 담습니다.</p> 
<p>- service 
&ensp: factory와 동일하게 기능을 갖는 함수를 반환하지만 factory와는 다르게 직접 객체를 리턴하지 않고 객체의 레퍼런스만을 기술합니다.</p>
<p>- provider 
&ensp: 실제로 서비스를 AngularJS 모듈에 인식시키는 메서드이며, 내부적으로 provider 메서드 내의 this.$get에 해당하는 부분이 서비스를 주입할 때 주입된다. </p>
<br>
<p>이 중 가장 많이 쓰이는 value와 factory, service에 대하여, 그리고 서비스를 사용하는 방법까지 예제에서 다루고 있습니다.</p>
<br>
<p>덧붙여, 모듈 내에서 정의한 서비스라면 $scope와 같이 바로 주입하여 사용하면 되지만, 다른 모듈의 서비스를 이용하려면 반드시 모듈을 주입한 후 사용하기 바랍니다.</p>